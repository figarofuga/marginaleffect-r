---
title: Marginal effectsとその周辺
subtitle: 多変量回帰・・・好きですか？
format:
  revealjs:
    width: 1600
    height: 900
    theme: [default, custom-style.scss]
    fig-width: 8
    fig-height: 6
    scrollable: true
    embed-resources: true
author:
  - name: Nozomi Niimi
    orcid: 0000-0002-6909-0740
    email: figarofuga@gmail.com
    affiliations: 東京医療センター総合内科
date: last-modified
engine: knitr
execute: 
  error: false
  warning: false
  echo: false
bibliography: references.bib
---

```{r}
library(data.table)
library(easystats)
library(ggplot2)
library(ggsurvfit)
library(plotly)
library(modelsummary)
library(tinytable)
library(Hmisc)
library(rms)
library(qreport)
library(survival)
library(plotthis)
library(cowplot)
```

## 皆さん多変量回帰は好きですか？

-   古くから研究されつくされており、信頼感がある

-   多くの統計ソフトに入っており、行うのが簡単

-   ::: red
    *解釈性が高く、分かりやすい*
    :::

-   本当？

## 多変量回帰は簡単？ {.smaller}

::::: columns
::: {.column width="50%"}
-   多変量回帰は多くの種類がある
    -   0/1でLogistic回帰
    -   整数値だとPoisson回帰
    -   順序ロジット
    -   Censored regression(Cox回帰もこのうち)
-   選択肢が多く、その分どうすればよいのか分からない！
:::

::: {.column width="50%"}
```{r}
#| warning: false
#| fig-cap: "Many regression species"
#| fig-width: 16

theme_set(cowplot::theme_cowplot())

N <- 1000

set.seed(42)
x <- runif(n = N, min = 0, max = 100)

y <- (-20) +x * 1.5 + rnorm(n = N, sd = 5)

dat <- data.table::data.table(x = x, 
                       y = y)[, `:=`(new_y = fcase(y <= 0, 0, 
                                               y >= 100, 100, 
                                               default = y), 
                                     col = fifelse((y <= 0 | y >= 100), 1, 2), 
                                     y_50 = fifelse(y > 50, 1, 0))]                                     

logistic_dat <- glm(y_50~ x, data = dat, family = binomial) |> 
  marginaleffects::predictions() |> 
  as.data.frame() 

bar_data <- data.frame(
  trt =  c(rep("Medication" , 4) , rep("Ablation" , 4) ),
  NYHA = rep(c("I" , "II" , "III", "IV") , 2),
  value = c(10, 20, 30, 40, 40, 30, 20, 10)
  )
 
# bar_data <- matrix(c(10, 20, 30, 40, 40, 30, 20, 10) , ncol=2)
# colnames(bar_data) <- c("Medication","Ablation")
# rownames(bar_data) <- c("NYHA I","NYHA II","NYHA III", "NYHA IV")

# # Get the stacked barplot
# barplot(bar_data, 
#         border="white",
#         width = 0.3,
#         legend.text = rownames(data),
#         args.legend = list(x = "topright"),
#         font.axis=2, 
#         xlab="treatment")


# tinyplot::plt(y ~ x | col, data = dat, fill = 0.3, palette = "ggplot2")
# tinyplot::plt(new_y ~ x | col, data = dat, add = T)
# tinyplot::plt(I(y > 30) ~ x, data = dat, type = type_glm(family = "binomial"))

p1 <- ggplot(dat) + 
  geom_point(aes(x = x, y = y), alpha = 0.5, color = "grey") + 
  geom_point(aes(x = x, y = new_y), color = "steelblue") + 
  labs(title = "Censored regression")


p2 <- ggplot(logistic_dat) + 
    geom_point(aes(x = x, y = y_50)) + 
    geom_line(aes(x = x, y = estimate)) + 
    geom_ribbon(aes(x = x, ymin = conf.low, ymax = conf.high), alpha = 0.3, color = "pink", fill = "pink") + 
    labs(x = "Age", y = "Survival", title = "Logistic regression")

p3 <- ggplot(bar_data, aes(fill=NYHA, y=value, x=trt)) + 
    geom_bar(position="fill", stat="identity", color = "black") + 
    scale_y_continuous(expand = c(0, 0)) + 
    labs(title = "Ordered regression")

p4 <- ggsurvfit::survfit2(Surv(time, status) ~ adhere, data = survival::colon) |> 
  ggsurvfit::ggsurvfit() + 
  labs(title = "Cox proportional hazard model") + 
  cowplot::theme_cowplot()

cowplot::plot_grid(plotlist = list(p1, p2, p3, p4), nrow = 2)

```
:::
:::::

## 例えば・・・・・・

-   ICU入室患者に対してRHCが予後を改善するかをみた観察研究[@Connors1996-gz]
    -   Propensity scoreを広めた研究としても有名
-   例えば、RHCが半年以内の死亡と関連するかをロジスティック回帰で解析をする


```{r}

rhc <- data.table::fread("rhc.csv")

rhc_prep <- setDT(rhc) |> 
  datawizard::data_modify(
      death_01 = fifelse(death == "Yes", 1, 0),
      death_days_pre = fcase(
          death == "Yes", dthdte - sadmdte, 
          death == "No", max(dschdte, lstctdte, na.rm = TRUE) - sadmdte
        ), 
  death_yn = fifelse(
    death == "Yes" & death_days_pre <= 180, 1, 0
  ), 
  death_days = fifelse(death_days_pre <= 180, death_days_pre, 180), 
  alb1 = fifelse(alb1 > 7, NA_real_, alb1), 
  cat_chf = fifelse(cat1 == "CHF", "CHF", "Others")
)

dd <- rms::datadist(rhc_prep)
options("datadist" = dd)

full_fit <- glm(formula =  death_01 ~ swang1 + cat_chf + age + sex + race + edu + income + wtkilo1 + temp1 + meanbp1 + resp1 + hrt1 + pafi1 + paco21 + ph1 + wblc1 + hema1 + sod1 + pot1 + crea1 + bili1 + alb1 + cardiohx + chfhx + immunhx + transhx + amihx,
               family = binomial,
               data    = rhc_prep)

interact_fit <- glm(formula =  death_01 ~ swang1*cat_chf + age + sex + race + edu + income + wtkilo1 + temp1 + meanbp1 + resp1 + hrt1 + pafi1 + paco21 + ph1 + wblc1 + hema1 + sod1 + pot1 + crea1 + bili1 + alb1 + cardiohx + chfhx + immunhx + transhx + amihx,
               family = binomial,
               data    = rhc_prep)

spline_fit <- glm(formula =  death_01 ~ swang1*cat_chf + rcs(age, 4) + sex + race + edu + income + wtkilo1 + temp1 + meanbp1 + resp1 + hrt1 + pafi1 + paco21 + ph1 + wblc1 + hema1 + sod1 + pot1 + crea1 + bili1 + alb1 + cardiohx + chfhx + immunhx + transhx + amihx,
               family = binomial,
               data    = rhc_prep)

```

```{r}

modelsummary::modelsummary(
  list("Base" = full_fit),
  exponentiate = TRUE,
  coef_rename = c("swang1RHC" = "RHC", "cat_chfOthers" = "Not CHF", "age" = "Age"),
  fmt = 2,
  estimate  = "{estimate} [{conf.low}, {conf.high}]",
  statistic = NULL,
  coef_omit = "^(?!(swang|cat|age))") |> 
  tinytable::style_tt(i = 1, j = 1:2, background = "white", color = "red", bold = TRUE)

```

-   結果として、RHCは半年以内の死亡と関連する！
-   しかし、ここで上司からのつっこみ

## 上司からのつっこみ①

![](image/boss_interact.drawio.png)


## 結果①

```{r}

modelsummary::modelsummary(
  list("Base" = full_fit, "Interact" = interact_fit),
  exponentiate = TRUE,
  coef_rename = c("swang1RHC" = "RHC", "cat_chfOthers" = "Not CHF", "age" = "Age"),
  fmt = 2,
  estimate  = "{estimate} [{conf.low}, {conf.high}]",
  statistic = NULL,
  coef_omit = "^(?!(swang|cat|age))") |> 
  tinytable::style_tt(i = 1, j = 1:3, background = "white", color = "red", bold = TRUE)

```


## 上司からのつっこみ②

![](image/boss_spline.drawio.png)

## 結果②

```{r}

modelsummary::modelsummary(
  list("Base" = full_fit, "Interact" = interact_fit, "Spline" = spline_fit),
  exponentiate = TRUE,
  coef_rename = c("swang1RHC" = "RHC", "cat_chfOthers" = "Not CHF", "age" = "Age"),
  fmt = 2,
  estimate  = "{estimate} [{conf.low}, {conf.high}]",
  statistic = NULL,
  coef_omit = "^(?!(swang|cat|age|rcs))") |> 
  tinytable::style_tt(i = 1, j = 1:4, background = "white", color = "red", bold = TRUE)

```

## 最終的に・・・・・・

![](image/gakkai_shitsugi.drawio.png)


## Interactionの意味は？

-   Interaction項のORの解釈は？
    -   結果の一貫性を示す？
    -   結果の異質性を示す？

## 多変量回帰の複雑性～非線形

-   非線形の関係の連続値の扱い方は？
    -   LOESS? log? Rrestricted Cubic Spline?
-   RCSの解釈は？

## 例えば、2つの連続値をSplineで表したの場合

:::: {.columns}

::: {.column width="40%"}
```{r}

spline_fit2 <- lrm(death_01 ~ rcs(age, 4) * rcs(crea1, 4) + sex + meanbp1 + hrt1 + resp1 + alb1, data = rhc_prep)

spline_dat2 <- Predict(spline_fit2, age = seq(0, 100, by = 2), crea1 = seq(0, 10, 0.2)) |> 
  dplyr::rename(`Odds ratio` = yhat, 
                Cr = crea1, 
                Age = age)

spline_fig1 <- Predict(spline_fit2, age, fun = exp) |> 
  ggplot() + 
  labs(title = "Spline curve for one variables")

spline_fig1

```

:::

::: {.column width="60%"}

```{r}

plot_ly(spline_dat2, x = ~Age, y = ~Cr, z = ~`Odds ratio`, opacity = 0.5) |>
      add_trace(type="mesh3d") |>
      layout(
    title = list(
      text = "3D association with two continuous variables with splines",
      font = list(size = 18),
      x = 0.5  # タイトルを中央に（0が左、1が右）
    )
  )

```

:::

-   本当のSplineでこんな感じ
-   どういう意味ですか？

::::

## 我々はどこにいる？

![](image/zetsubou.png)


## どうしてこんな事に？

- 基本的に多変量回帰は線形回帰を前提としている
- 線形回帰の条件
  - Linearity: 目的変数と説明変数の間が線形の関係であること．
  - Independence: どの説明変数の残差間にも相関がない．
  - Normality: 残差が正規分布していること
  - Error variance: 残差の等分散性
- これらが満たされない時にInteractionやSplineが必要

## どうしてこんな事に？

- 線形回帰の係数の解釈 = 条件付き期待値
  - 他の値を固定した時に、その因子を1単位変化した時の平均的なアウトカムの変化量
- その結果、係数(OR, HRなど)という1つの値にまるめてしまう
- 複雑な関係性をこの係数のみを報告する事で逆にわかりにくくなる事もある
 
## どうやって報告すればいい？

- 「誰に？」「何が？」「どのくらい？」変化したら、アウトカムが変化するか？
- 難しい言葉でいうと**"Estimand"**

## 治療効果は1つの結果で良いのか？

::::: columns
::: {.column width="50%"}
✕

![](image/harrel_bin_text.png)
              
-   集団全体の治療効果判定のみ
-   患者のRiskによって治療効果は異なるはず
    -   治療効果の異質性

:::

::: {.column width="50%"}
◯

![](image/harrel_binomial.png)


:::

::::

```{r}
glm(formula = death_01 ~ swang1,
                family  = binomial(link = "logit"),
                data    = rhc_prep)

glmCrude <- glm(formula = death_01 ~ swang1,
                family  = binomial(link = "logit"),
                data    = rhc_prep)

glmFull <- glm(formula =  death_01 ~ swang1 + age + sex + race + edu + income + ninsclas + cat1 + das2d3pc + dnr1 + ca + surv2md1 + aps1 + scoma1 + wtkilo1 + temp1 + meanbp1 + resp1 + hrt1 + pafi1 + paco21 + ph1 + wblc1 + hema1 + sod1 + pot1 + crea1 + bili1 + alb1 + resp + card + neuro + gastr + renal + meta + hema + seps + trauma + ortho + cardiohx + chfhx + dementhx + psychhx + chrpulhx + renalhx + liverhx + gibledhx + malighx + immunhx + transhx + amihx,
               family  = binomial(link = "logit"),
               data    = rhc_prep)

```


## ここまでの纏め

-   多変量解析は解釈がわかりにくい！
    -   特に、InteractionやSplineが入るとよりわかりにくい
    -   通常の解析だと、結果は集団全体の平均で丸め込まれてしまう
        -   Realな治療効果はBaselineのRiskでも変わるはず！
    -   どうすればいい？

## Marginal effectsという選択肢

-   G-computationについて

## G-computation

-   本来は、結果のStandardizationの手法
-   Estimandを決定する方法もある

## G-computationの考え方

![](image/gformula.drawio.png)

## G-computationの応用～ATE/ATT/ATU

![](image/gformula_att.drawio.png)

-   元データのうち、元々Interventionが0/1の群だけで同様の事をするとATT/ATUも推定可能
-   Interventionだけでなくても、興味がある変数を動かす事で周辺効果(marginal effect)を出すことが可能
-   重み付けを使うことで、Doubly robustも可能

## G-computationの応用～Doubly robust

1.   Propensity score weightingを計算
1.   Outcomeを目標とする多変量回帰を作成
1.   上記を組み合わせてDoubly robustを計算可能
1.   どの群を選ぶかでATT/ATE/ATUも簡単に計算可能！

## G-computationの利点

-   「この集団の介入を変えたら、どの程度良くなるか？」をダイレクトに伝えられる[@King2000-ce]
    -   InteractionやSplineなど複雑な式でもシンプルに結果を伝えられる
-   因果と予測を両方行う事が可能！

## Average marginal prediction

通常のアウトカム式のみで一発勝負 ここはDoubly robustは使っちゃいけない

## 因果関係の場合

SUTVAの原理

## そのため・・・・・・

例えば、Matching→G computation あるいは、元々のInclusionを入れて除外したあとにIPW→アウトカム式を入れる そうすることでDoubly robust estimationとなる

## どういう式を作る？

基本は、ドメイン知識を入れる ただし、どのような関係性かをみるのにはAICとか、尤度比検定をしても良いかも

## Box先生の名言

> すべてのモデルは誤っている。しかし、そのうちのいくつかは役に立つ。

## 例えば

```{r}

veteran <- survival::veteran
colon <- survival::colon
colon_recurrent <- datawizard::data_filter(colon, etype == 1)

colon_death <- datawizard::data_filter(colon, etype == 2)


```

-   大腸癌のデータセット[@survival-package, @laurie1989]

```{r}

# fit <- glm(death_30days ~ swang1 + age + sex + adld3p + meanbp1 + hrt1 + resp1 + crea1 , data = rhc_prep, family = binomial)

fit <- glm(status ~ rx + age + sex + obstruct + perfor + adhere + surg + nodes, data = colon_death, family = binomial)

parameters::model_parameters(fit, exponentiate = TRUE) |> 
  format(select = "minimal") |> 
  tinytable::tt() |> 
  tinytable::style_tt(i = 2, bold = T, color = "red")

```

## 結果の解釈

1.  Levamisoleの治療は経過観察と比べて有意差はなし
2.  Levamisole + 5-FUは経過観察に比べて予後良好と関連する

## Good news！

![](image/impact_factor.png) [@hegyi2020]

-   NEJM, JAMA, Lancet, ...を目指そう！
-   でも・・・
    -   例えば、副作用が30%増えるとして患者さんにどう説明する？
    -   他にも・・・

## 医学は無料ではない！

![](image/tafamidis.png) [@Maurer2018-rp]

-   9716.5円/Cap x 4 x 365 = 1400万円/年
-   医療経済的にどう考えればいい？


-   estimand -\> 誰に？
-   どれくらい？

## Marginal effects

-   各群での、平均化(周辺化)した値をMarginal effectsという
    -   反対はConditional effectsという
-   必要な群でのMarginal effectsこそが重要！！

## RでのMarginal effectsの使い方

## Thank you for your listening!!

## References

::: {#refs}
:::